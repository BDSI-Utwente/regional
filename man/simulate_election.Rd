% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_election.R
\name{simulate_election}
\alias{simulate_election}
\title{Simulate a multi-seat district election with compensatory seats for
proportional representation under various conditions.}
\usage{
simulate_election(
  districts,
  parties,
  district_options = list(),
  vote_simulation_options = list(),
  seat_options = list(),
  seed = 24
)
}
\arguments{
\item{districts}{either a single integer for the number of parties, or a
character vector of party names}

\item{parties}{either a single integer for the number of districts, or a
character vector of district names}

\item{district_options}{a list of options for generating districts with
varying sizes and turnout rates, and how to allocate
seats across districts. See the details section for
more.}

\item{vote_simulation_options}{a list of options for generating vote shares, passed
on as-is to \code{sharesimulatoR::simulate_shares}.}

\item{seat_options}{a list of options for seat allocation; total number of
seats, seats to be allocated within districts and as
compensatory seats, seat allocation methods, etc.
See the details section for more information.}

\item{seed}{random seed to use for reproducibility, defaults to
24.}
}
\value{
\if{html}{\out{<div class="sourceCode">}}\preformatted{            A list with components `district_meta`, `district_seats`,
                     and `final_seats`. The first is a tibble containing
                     district size, turnout, voters, and available seats.
                     `district_seats` contains vote counts and allocated
                     seats for each district, whereas `final_seats`
                     contains aggregated district seat allocations, compen-
                     satory seats, and final seat counts.
}\if{html}{\out{</div>}}
}
\description{
Simulate a multi-seat district election with compensatory seats for
proportional representation under various conditions.
}
\examples{

# Simple election with 12 districts and 6 parties, using default settings
# (150 seats, 100 seats in districts, districts are identical, Hare allocation)
simulate_election(12, 6)

# Specify district and party names, districts are not identical, use dHondt
# allocation for all races.
simulate_election(
  districts = paste0("District ", 1:12),
  parties = c("Red", "Blue", "Green", "Polka dots"),
  district_options = list(
    district_sizes = rnorm(12, 10000, 2000)^2,
    district_turnouts = runif(12, 0.5, 0.8),
    district_seat_allocation_method = "dh"
  ),
  seat_options = list(
    district_party_seat_allocation_method = "dh",
    extra_party_seat_allocation_method = "df"
  )
)
}
